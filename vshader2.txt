#version 330

//Zmienne jednorodne
uniform mat4 P;
uniform mat4 V;
uniform mat4 M;
uniform vec4 Przes;

float PI = 3.1415926;

layout(location = 0) in vec3 vertex;
layout(location = 1) in vec3 normals;
layout(location = 2) in vec2 uvs;

//uniform float u_offset1;

out vec2 texCoords;

//Atrybuty

void main(void) {
    texCoords = uvs;

     //liczenie macierzy przesuniecia
    mat4 Mov = mat4(1.0);
    Mov[3].x=Przes.x;
    Mov[3].z=Przes.z;

    //liczenie macierzy obrotu o 90 stopni, o≈ì Y

    mat4 Rot = mat4(1.0);
    if(int(Przes.w)==0){
        Rot[0].x=cos(90*Przes.y*PI/180);
        Rot[0].z=-sin(90*Przes.y*PI/180);
        Rot[2].x=sin(90*Przes.y*PI/180);
        Rot[2].z=cos(90*Przes.y*PI/180);

   }

   else{
        Rot[0].x=cos(90*(Przes.w-1.0)*PI/180);
        Rot[0].z=-sin(90*(Przes.w-1.0)*PI/180);
        Rot[2].x=sin(90*(Przes.w-1.0)*PI/180);
        Rot[2].z=cos(90*(Przes.w-1.0)*PI/180);

   }

    mat4 Mod=Mov*Rot*M;



	gl_Position=P*V*Mod*vec4(vertex, 1);
}


